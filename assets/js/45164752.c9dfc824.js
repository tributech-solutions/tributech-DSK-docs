(self.webpackChunktributech_docs=self.webpackChunktributech_docs||[]).push([[860],{3905:function(t,e,a){"use strict";a.d(e,{Zo:function(){return l},kt:function(){return u}});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function s(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},o=Object.keys(t);for(r=0;r<o.length;r++)a=o[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)a=o[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var d=r.createContext({}),c=function(t){var e=r.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):s(s({},e),t)),a},l=function(t){var e=c(t.components);return r.createElement(d.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},h=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,o=t.originalType,d=t.parentName,l=i(t,["components","mdxType","originalType","parentName"]),h=c(a),u=n,m=h["".concat(d,".").concat(u)]||h[u]||p[u]||o;return a?r.createElement(m,s(s({ref:e},l),{},{components:a})):r.createElement(m,s({ref:e},l))}));function u(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var o=a.length,s=new Array(o);s[0]=h;var i={};for(var d in e)hasOwnProperty.call(e,d)&&(i[d]=e[d]);i.originalType=t,i.mdxType="string"==typeof t?t:n,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},7935:function(t,e,a){"use strict";a.r(e),a.d(e,{frontMatter:function(){return i},contentTitle:function(){return d},metadata:function(){return c},toc:function(){return l},default:function(){return h}});var r=a(2122),n=a(9756),o=(a(7294),a(3905)),s=["components"],i={title:"Auditable Data",sidebar_position:4},d="Auditable data",c={unversionedId:"introduction/auditable-data",id:"introduction/auditable-data",isDocsHomePage:!1,title:"Auditable Data",description:"This page describes how Tributech generates auditable data and ensures secure data communication channels. Furthermore, the Trust layer of each node is presented, which guarantees tamperproof storage for proofs.",source:"@site/docs/introduction/auditable-data.md",sourceDirName:"introduction",slug:"/introduction/auditable-data",permalink:"/docs/introduction/auditable-data",editUrl:"https://github.com/tributech-solutions/tributech-dsk-docs/edit/master/docs/introduction/auditable-data.md",version:"current",sidebarPosition:4,frontMatter:{title:"Auditable Data",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"DataSpace Agent",permalink:"/docs/introduction/architecture/dsk_edge"},next:{title:"Overview",permalink:"/docs/quickstart/overview"}},l=[{value:"Channels and APIs",id:"channels-and-apis",children:[]},{value:"Trust Layer",id:"trust-layer",children:[]},{value:"Data Classification",id:"data-classification",children:[]},{value:"Data Sharing Process",id:"data-sharing-process",children:[]}],p={toc:l};function h(t){var e=t.components,i=(0,n.Z)(t,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,i,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"auditable-data"},"Auditable data"),(0,o.kt)("p",null,"This page describes how Tributech generates auditable data and ensures secure data communication channels. Furthermore, the Trust layer of each node is presented, which guarantees tamperproof storage for proofs."),(0,o.kt)("p",null,"An overview of the communication between nodes and the involved internal components can be seen in the image below (open it in a new tab to inspect it and zoom in).\n",(0,o.kt)("img",{alt:"Node Architecture with channels",src:a(9705).Z})),(0,o.kt)("h3",{id:"channels-and-apis"},"Channels and APIs"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Channels"),' connect the distributed components of a DataSpace Ecosystem. They can be considered as "black-boxes" which contain synchronisation processes for exchanging data. They handle the networking, data processing, authentication and encryption between the connected components. These channels are separated into:'),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Channel"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"P2P Data Sync Channels")),(0,o.kt)("td",{parentName:"tr",align:"left"},"A channel to exchange requested streams of sensor-, processes- or business data peer-to-peer between DataSpace Nodes.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"Metadata Channels")),(0,o.kt)("td",{parentName:"tr",align:"left"},"A channel to exchange required metadata (e.g. published Datasets) of the Ecosystem between the DataSpace Nodes and their associated DataSpace Hub.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"Trust Channels")),(0,o.kt)("td",{parentName:"tr",align:"left"},"A channel to transfer cryptographic proofs directly from the DataSpace Agents to the trust layer of the associated DataSpace Node.")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"APIs")," are well documented and supported interfaces for the different types of data in the Ecosystem in order to integrate sensors, databases and applications within the infrastructure of each participating stakeholder. These APIs are separated into:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"API"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"Data API")),(0,o.kt)("td",{parentName:"tr",align:"left"},"This API is integrated into each DataSpace Node and provides the interface and services in order to deliver and consume data streams.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"Trust API")),(0,o.kt)("td",{parentName:"tr",align:"left"},"This API is integrated into each DataSpace Node and provides the interface for the trust layer in order to consume cryptographic proofs for the data auditing.")))),(0,o.kt)("h3",{id:"trust-layer"},"Trust Layer"),(0,o.kt)("p",null,"Each DataSpace Ecosystem contains a ",(0,o.kt)("strong",{parentName:"p"},"Trust Layer")," for storing cryptographic proofs that are generated by DataSpace Agents to provide the data auditing capabilities for all stakeholders inside an Ecosystem. Each DataSpace Node contains an instance of the Trust Layer and each Node contains the required services for the supported data auditing capabilities. The Trust API connects to this Trust Layer when retrieving the proofs which are at the core of data auditability."),(0,o.kt)("p",null,"To ensure tamperproof storage of the proofs, the Trust Layer is based on distributed ledger technology. Proofs are shared throughout the Ecosystem like in a distributed network. Every node is thus plays its part in ensuring the data auditability of the ecosystem. ",(0,o.kt)("br",null),"\nThe distributed ledger contains only signed hashes (proofs) - hence no information is leaked. The hashes and signatures, generated by DataSpace Agents, allow the verification of the data integrity and data authenticity of the data streams."),(0,o.kt)("h3",{id:"data-classification"},"Data Classification"),(0,o.kt)("p",null,"The different kinds of data inside a DataSpace Ecosystem are classified into 3 types:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Metadata"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Metadata of datasets is stored at the DataSpace Hub and will be cached at the client in order to provide metadata of datasets inside a DataSpace Ecosystem.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Data Streams"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Data streams remain without exception at the owner's DataSpace Node. Every DataSpace Node stores his own streams and all streams that have been shared with him.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Proofs"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Proofs that are generated through the hashing and signing process of DataSpace Agents at the data\u2019s source, are stored in the Trust Layer. The metadata (proof location) for each proof, that is required for audit processes, is stored at the agent\u2019s associated DataSpace Node and will be provided to other nodes if they consume that data stream portion.")))),(0,o.kt)("h3",{id:"data-sharing-process"},"Data Sharing Process"),(0,o.kt)("p",null,"To provide a traceable and straightforward data sharing processes, we have implemented the publish-, request- and grant workflows for Datasets into the admin web interface that is part of a DataSpace Node. Data sources and streams that are connected with DataSpace Nodes are structured into Datasets that can be requested and shared with other DataSpace Nodes participating in the Ecosystem."),(0,o.kt)("p",null,"The design of the data sharing process ensures that the control of data and sovereignty remains at each participating stakeholder and his DataSpace Node. The modular and fine-grained data access management enables a Subscription in every possible combination of streams and timeframes for a Dataset - to meet the demands of data providers and consumers."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Workflow"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"Publish a Dataset")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Dataset owners can publish a Dataset (or just a part of it) to the whole Ecosystem or only to selected DataSpace Nodes. A Publication contains only descriptive metadata and not the data itself. A Publication makes available Datasets visible for other members inside a DataSpace Ecosystem.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"Request a Dataset")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Every user of a DataSpace Node within the Ecosystem can create and send a Request for selected streams, sources and timeframes to the owner of the Dataset.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"Grant/Deny a Request")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Dataset owners can grant or deny submitted Requests for their Datasets. Once a Request is confirmed, the synchronization starts and the data can be consumed by the Requester via the integrated dashboards or via APIs.")))))}h.isMDXComponent=!0},9705:function(t,e,a){"use strict";e.Z=a.p+"assets/images/node-architecture-with-channels-babbd3426395195ddf12ada370cd5e48.jpg"}}]);